{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","react_default","a","createElement","props","children","Component","Consumer","Contact","showInfo","onClickDelete","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","_callee","e","_this$state","newContact","regenerator_default","wrap","_context","prev","next","preventDefault","abrupt","post","sent","history","push","stop","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4656d489.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(res => this.setState({ contacts: res.data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showInfo: false\r\n  };\r\n\r\n  onClickDelete = (id, dispatch) => {\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, id } = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({ showInfo: !this.state.showInfo });\r\n                  }}\r\n                  className=\"fa fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fa fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onClickDelete.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fa fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {this.state.showInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact contact={contact} key={contact.id} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        className={classnames(\"form-control\", { \"is-invalid\": error })}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required.\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required.\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required.\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    className=\"btn btn-light btn-block\"\r\n                    type=\"submit\"\r\n                    value=\"ADD CONTACT\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required.\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required.\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required.\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Update Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    className=\"btn btn-light btn-block\"\r\n                    type=\"submit\"\r\n                    value=\"UPDATE CONTACT\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar nav-dark mb-3 navbar-expand-sm navbar-dark bg-danger py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n      </div>\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            <i className=\"fa fa-home\"> Home</i>\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/contact/add\" className=\"nav-link\">\r\n            <i className=\"fa fa-plus\"> Add</i>\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n            <i className=\"fa fa-question\"> About</i>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404 </span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry this page does not exist.</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}